from src.models.sensor import Sensor

class Room:
    """
    Representa una habitaciÃ³n en un edificio que puede contener zombis.
    Cada habitaciÃ³n tiene un sensor que detecta la presencia de zombis.
    """
    
    def __init__(self, floor_number, room_number):
        """
        Inicializa una nueva habitaciÃ³n con un nÃºmero de piso y nÃºmero de habitaciÃ³n.
        
        Args:
            floor_number (int): El nÃºmero de piso donde se encuentra esta habitaciÃ³n
            room_number (int): El nÃºmero de habitaciÃ³n en el piso
        """
        self.floor_number = floor_number
        self.room_number = room_number
        self.has_zombies = False
        self.sensor = Sensor(f"P{floor_number}H{room_number}")
        self.adjacent_rooms = []
    
    def add_adjacent_room(self, room):
        """
        AÃ±ade una habitaciÃ³n adyacente a la que los zombis pueden moverse.
        
        Args:
            room (Room): Una habitaciÃ³n adyacente
        """
        if room not in self.adjacent_rooms:
            self.adjacent_rooms.append(room)
    
    def add_zombies(self):
        """AÃ±ade zombis a la habitaciÃ³n y activa el sensor."""
        self.has_zombies = True
        self.sensor.set_alert()
    
    def remove_zombies(self):
        """Elimina los zombis de la habitaciÃ³n."""
        self.has_zombies = False
        # Nota: No restablecemos el sensor automÃ¡ticamente
        # ya que permanecerÃ­a en alerta hasta que se restablezca manualmente
    
    def reset_sensor(self):
        """Restablece el sensor de la habitaciÃ³n al estado normal."""
        self.sensor.reset()
    
    def get_adjacent_rooms(self):
        """
        Obtiene todas las habitaciones adyacentes.
        
        Returns:
            list: Una lista de objetos Room adyacentes
        """
        return self.adjacent_rooms
    
    def __str__(self):
        """
        RepresentaciÃ³n en cadena de texto de la habitaciÃ³n.
        
        Returns:
            str: Una cadena que muestra la ubicaciÃ³n de la habitaciÃ³n y el estado de los zombis
        """
        status = "ğŸ§Ÿ INFESTADA" if self.has_zombies else "âœ… DESPEJADA"
        sensor_status = "ğŸš¨ ALERTA" if self.sensor.is_alert() else "ğŸŸ¢ NORMAL"
        return f"HabitaciÃ³n {self.floor_number}-{self.room_number}: {status} | Sensor: {sensor_status}" 