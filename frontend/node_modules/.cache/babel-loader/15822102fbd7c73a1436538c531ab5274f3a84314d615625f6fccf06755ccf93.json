{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiali\\\\OneDrive\\\\Escritorio\\\\Javier_Entrevista\\\\frontend\\\\src\\\\components\\\\BuildingVisualization.js\";\nimport React from 'react';\nimport { Box, Typography, Grid, Paper, Tooltip, styled } from '@mui/material';\n\n// Styled components for the visualization\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FloorContainer = styled(Box)(({\n  theme\n}) => ({\n  marginBottom: theme.spacing(4),\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.grey[100]\n}));\n_c = FloorContainer;\nconst RoomCard = styled(Paper)(({\n  theme,\n  hasZombies,\n  isStaircase,\n  sensorAlert,\n  isHighlighted,\n  hasPracticante\n}) => ({\n  height: '120px',\n  width: '100%',\n  padding: theme.spacing(2),\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  backgroundColor: isHighlighted ? theme.palette.primary.light : isStaircase ? theme.palette.grey[300] : theme.palette.background.paper,\n  border: '1px solid',\n  borderColor: isHighlighted ? theme.palette.primary.main : theme.palette.grey[300],\n  boxShadow: isHighlighted ? `0 0 10px ${theme.palette.primary.main}` : theme.shadows[1],\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: theme.shadows[6]\n  }\n}));\n_c2 = RoomCard;\nconst RoomIcon = styled('div')(({\n  theme\n}) => ({\n  fontSize: '24px',\n  margin: theme.spacing(1, 0),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minHeight: '30px'\n}));\n_c3 = RoomIcon;\nconst StatusIndicator = styled('div')(({\n  theme,\n  color\n}) => ({\n  position: 'absolute',\n  top: '8px',\n  right: '8px',\n  width: '12px',\n  height: '12px',\n  borderRadius: '50%',\n  backgroundColor: color\n}));\n_c4 = StatusIndicator;\nconst PracticanteIndicator = styled('div')(({\n  theme\n}) => ({\n  position: 'absolute',\n  bottom: '8px',\n  right: '8px',\n  fontSize: '32px',\n  fontWeight: 'bold',\n  filter: 'drop-shadow(0px 0px 2px rgba(0,0,0,0.7))',\n  zIndex: 10\n}));\n\n// Función para formatear el número de habitación según el nuevo formato\n_c5 = PracticanteIndicator;\nconst formatRoomNumber = (floorIndex, roomNumber) => {\n  // Sumamos 1 al índice del piso para que empiece en 1\n  const floorNumber = floorIndex + 1;\n  // Para las escaleras, mantenemos un formato especial\n  if (roomNumber === 0) {\n    return `E${floorNumber}`;\n  }\n  // Para habitaciones normales, usamos el formato piso + número secuencial\n  return `${floorNumber}${roomNumber.toString().padStart(2, '0')}`;\n};\nconst BuildingVisualization = ({\n  data,\n  onRoomClick,\n  selectedRoom\n}) => {\n  if (!data || !data.building || !Array.isArray(data.building)) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No hay datos del edificio disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Reversing to display the highest floor at the top\n  const floors = [...data.building].reverse();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 2\n    },\n    children: floors.map((floor, floorIndex) => {\n      // Calculamos el índice real del piso (considerando la inversión)\n      const actualFloorIndex = data.building.length - 1 - floorIndex;\n      // Sumamos 1 para que los pisos comiencen en 1 en lugar de 0\n      const displayFloorNumber = actualFloorIndex + 1;\n      return /*#__PURE__*/_jsxDEV(FloorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Piso \", displayFloorNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: floor.map(room => {\n            const isSelected = selectedRoom && selectedRoom.floor === room.floor && selectedRoom.room === room.room;\n            const hasPracticante = data.practicante && data.practicante.floor === room.floor && data.practicante.room === room.room;\n\n            // Formateamos el número de habitación según el nuevo formato\n            const formattedRoomNumber = formatRoomNumber(room.floor, room.room);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 4,\n              md: 3,\n              lg: 2,\n              onClick: () => onRoomClick(room.floor, room.room),\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: `${room.is_staircase ? 'Escalera' : 'Habitación'} ${formattedRoomNumber}${room.has_zombies ? ' - ¡Zombie!' : ''}${!room.is_staircase && room.sensor_alert ? ' - ¡Alerta de Sensor!' : ''}${hasPracticante ? ' - ¡El practicante está aquí!' : ''}`,\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(RoomCard, {\n                  hasZombies: room.has_zombies,\n                  isStaircase: room.is_staircase,\n                  sensorAlert: !room.is_staircase && room.sensor_alert,\n                  isHighlighted: isSelected,\n                  hasPracticante: hasPracticante,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: room.is_staircase ? `Escalera ${formattedRoomNumber}` : `Hab. ${formattedRoomNumber}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(RoomIcon, {\n                    children: room.is_staircase ? '🪜' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [room.has_zombies && /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          marginRight: '5px'\n                        },\n                        children: \"\\uD83E\\uDDDF\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 52\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uD83D\\uDEAA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this), !room.is_staircase && /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                    color: room.sensor_alert ? '#ff5722' : '#4caf50'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this), hasPracticante && /*#__PURE__*/_jsxDEV(PracticanteIndicator, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      role: \"img\",\n                      \"aria-label\": \"Practicante\",\n                      children: \"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF93\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)\n            }, `room-${room.floor}-${room.room}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, `floor-${actualFloorIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_c6 = BuildingVisualization;\nexport default BuildingVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"FloorContainer\");\n$RefreshReg$(_c2, \"RoomCard\");\n$RefreshReg$(_c3, \"RoomIcon\");\n$RefreshReg$(_c4, \"StatusIndicator\");\n$RefreshReg$(_c5, \"PracticanteIndicator\");\n$RefreshReg$(_c6, \"BuildingVisualization\");","map":{"version":3,"names":["React","Box","Typography","Grid","Paper","Tooltip","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","FloorContainer","theme","marginBottom","spacing","borderRadius","shape","padding","backgroundColor","palette","grey","_c","RoomCard","hasZombies","isStaircase","sensorAlert","isHighlighted","hasPracticante","height","width","display","flexDirection","alignItems","justifyContent","position","cursor","transition","primary","light","background","paper","border","borderColor","main","boxShadow","shadows","transform","_c2","RoomIcon","fontSize","margin","minHeight","_c3","StatusIndicator","color","top","right","_c4","PracticanteIndicator","bottom","fontWeight","filter","zIndex","_c5","formatRoomNumber","floorIndex","roomNumber","floorNumber","toString","padStart","BuildingVisualization","data","onRoomClick","selectedRoom","building","Array","isArray","sx","textAlign","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","floors","reverse","py","map","floor","actualFloorIndex","length","displayFloorNumber","gutterBottom","container","room","isSelected","practicante","formattedRoomNumber","item","xs","sm","md","lg","onClick","title","is_staircase","has_zombies","sensor_alert","arrow","style","marginRight","role","_c6","$RefreshReg$"],"sources":["C:/Users/jiali/OneDrive/Escritorio/Javier_Entrevista/frontend/src/components/BuildingVisualization.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, Grid, Paper, Tooltip, styled } from '@mui/material';\r\n\r\n// Styled components for the visualization\r\nconst FloorContainer = styled(Box)(({ theme }) => ({\r\n  marginBottom: theme.spacing(4),\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(2),\r\n  backgroundColor: theme.palette.grey[100]\r\n}));\r\n\r\nconst RoomCard = styled(Paper)(({ \r\n  theme, \r\n  hasZombies, \r\n  isStaircase, \r\n  sensorAlert, \r\n  isHighlighted,\r\n  hasPracticante\r\n}) => ({\r\n  height: '120px',\r\n  width: '100%',\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  position: 'relative',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.3s ease',\r\n  backgroundColor: isHighlighted \r\n    ? theme.palette.primary.light \r\n    : isStaircase \r\n      ? theme.palette.grey[300] \r\n      : theme.palette.background.paper,\r\n  border: '1px solid',\r\n  borderColor: isHighlighted \r\n    ? theme.palette.primary.main \r\n    : theme.palette.grey[300],\r\n  boxShadow: isHighlighted \r\n    ? `0 0 10px ${theme.palette.primary.main}` \r\n    : theme.shadows[1],\r\n  '&:hover': {\r\n    transform: 'translateY(-5px)',\r\n    boxShadow: theme.shadows[6]\r\n  }\r\n}));\r\n\r\nconst RoomIcon = styled('div')(({ theme }) => ({\r\n  fontSize: '24px',\r\n  margin: theme.spacing(1, 0),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  minHeight: '30px'\r\n}));\r\n\r\nconst StatusIndicator = styled('div')(({ theme, color }) => ({\r\n  position: 'absolute',\r\n  top: '8px',\r\n  right: '8px',\r\n  width: '12px',\r\n  height: '12px',\r\n  borderRadius: '50%',\r\n  backgroundColor: color\r\n}));\r\n\r\nconst PracticanteIndicator = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  bottom: '8px',\r\n  right: '8px',\r\n  fontSize: '32px',\r\n  fontWeight: 'bold',\r\n  filter: 'drop-shadow(0px 0px 2px rgba(0,0,0,0.7))',\r\n  zIndex: 10\r\n}));\r\n\r\n// Función para formatear el número de habitación según el nuevo formato\r\nconst formatRoomNumber = (floorIndex, roomNumber) => {\r\n  // Sumamos 1 al índice del piso para que empiece en 1\r\n  const floorNumber = floorIndex + 1;\r\n  // Para las escaleras, mantenemos un formato especial\r\n  if (roomNumber === 0) {\r\n    return `E${floorNumber}`;\r\n  }\r\n  // Para habitaciones normales, usamos el formato piso + número secuencial\r\n  return `${floorNumber}${roomNumber.toString().padStart(2, '0')}`;\r\n};\r\n\r\nconst BuildingVisualization = ({ data, onRoomClick, selectedRoom }) => {\r\n  if (!data || !data.building || !Array.isArray(data.building)) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', p: 3 }}>\r\n        <Typography variant=\"body1\">No hay datos del edificio disponibles.</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Reversing to display the highest floor at the top\r\n  const floors = [...data.building].reverse();\r\n\r\n  return (\r\n    <Box sx={{ py: 2 }}>\r\n      {floors.map((floor, floorIndex) => {\r\n        // Calculamos el índice real del piso (considerando la inversión)\r\n        const actualFloorIndex = data.building.length - 1 - floorIndex;\r\n        // Sumamos 1 para que los pisos comiencen en 1 en lugar de 0\r\n        const displayFloorNumber = actualFloorIndex + 1;\r\n        \r\n        return (\r\n          <FloorContainer key={`floor-${actualFloorIndex}`}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Piso {displayFloorNumber}\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              {floor.map((room) => {\r\n                const isSelected = selectedRoom && \r\n                  selectedRoom.floor === room.floor && \r\n                  selectedRoom.room === room.room;\r\n                \r\n                const hasPracticante = data.practicante && \r\n                  data.practicante.floor === room.floor && \r\n                  data.practicante.room === room.room;\r\n                \r\n                // Formateamos el número de habitación según el nuevo formato\r\n                const formattedRoomNumber = formatRoomNumber(room.floor, room.room);\r\n                \r\n                return (\r\n                  <Grid \r\n                    item \r\n                    xs={6} \r\n                    sm={4} \r\n                    md={3} \r\n                    lg={2} \r\n                    key={`room-${room.floor}-${room.room}`}\r\n                    onClick={() => onRoomClick(room.floor, room.room)}\r\n                  >\r\n                    <Tooltip \r\n                      title={`${room.is_staircase ? 'Escalera' : 'Habitación'} ${formattedRoomNumber}${room.has_zombies ? ' - ¡Zombie!' : ''}${!room.is_staircase && room.sensor_alert ? ' - ¡Alerta de Sensor!' : ''}${hasPracticante ? ' - ¡El practicante está aquí!' : ''}`} \r\n                      arrow\r\n                    >\r\n                      <RoomCard \r\n                        hasZombies={room.has_zombies} \r\n                        isStaircase={room.is_staircase}\r\n                        sensorAlert={!room.is_staircase && room.sensor_alert}\r\n                        isHighlighted={isSelected}\r\n                        hasPracticante={hasPracticante}\r\n                      >\r\n                        <Typography variant=\"subtitle1\">\r\n                          {room.is_staircase ? `Escalera ${formattedRoomNumber}` : `Hab. ${formattedRoomNumber}`}\r\n                        </Typography>\r\n                        \r\n                        <RoomIcon>\r\n                          {room.is_staircase ? '🪜' : (\r\n                            <>\r\n                              {room.has_zombies && <span style={{ marginRight: '5px' }}>🧟</span>}\r\n                              <span>🚪</span>\r\n                            </>\r\n                          )}\r\n                        </RoomIcon>\r\n                        \r\n                        {!room.is_staircase && (\r\n                          <StatusIndicator color={room.sensor_alert ? '#ff5722' : '#4caf50'} />\r\n                        )}\r\n                        \r\n                        {hasPracticante && (\r\n                          <PracticanteIndicator>\r\n                            <span role=\"img\" aria-label=\"Practicante\">🧑‍🎓</span>\r\n                          </PracticanteIndicator>\r\n                        )}\r\n                      </RoomCard>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </FloorContainer>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BuildingVisualization; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}