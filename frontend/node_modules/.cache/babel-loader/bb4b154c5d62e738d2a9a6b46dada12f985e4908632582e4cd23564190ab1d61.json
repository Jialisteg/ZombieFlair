{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiali\\\\OneDrive\\\\Escritorio\\\\Javier_Entrevista\\\\frontend\\\\src\\\\components\\\\StatsPanel.js\";\nimport React from 'react';\nimport { Box, Grid, Typography, LinearProgress, Divider, Chip, Card, CardContent } from '@mui/material';\nimport { Chart as ChartJS, ArcElement, Tooltip as ChartTooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\n\n// Función para formatear el número de habitación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatRoomNumber = (floorIndex, roomNumber) => {\n  // Sumamos 1 al índice del piso para que empiece en 1\n  const floorNumber = floorIndex + 1;\n  // Para habitaciones normales, usamos el formato piso + número secuencial\n  return `${floorNumber}${roomNumber.toString().padStart(2, '0')}`;\n};\n\n// Register Chart.js components\nChartJS.register(ArcElement, ChartTooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\nconst StatsPanel = ({\n  data\n}) => {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No hay estad\\xEDsticas disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Extract data for charts\n  const totalRooms = data.total_rooms || 0;\n  const infestedRooms = data.infested_rooms || 0;\n  const cleanRooms = totalRooms - infestedRooms;\n  const infestedPercentage = totalRooms > 0 ? infestedRooms / totalRooms * 100 : 0;\n\n  // Floor-wise infestation data for bar chart\n  const floorLabels = [];\n  const floorInfestation = [];\n  const floorTotals = [];\n  if (data.building && Array.isArray(data.building)) {\n    data.building.forEach((floor, index) => {\n      floorLabels.push(`Piso ${index}`);\n      const totalRoomsInFloor = floor.length;\n      const infestedRoomsInFloor = floor.filter(room => room.has_zombies).length;\n      floorInfestation.push(infestedRoomsInFloor);\n      floorTotals.push(totalRoomsInFloor);\n    });\n  }\n\n  // Pie chart data\n  const pieData = {\n    labels: ['Habitaciones Limpias', 'Habitaciones Infestadas'],\n    datasets: [{\n      data: [cleanRooms, infestedRooms],\n      backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)'],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  // Bar chart data\n  const barData = {\n    labels: floorLabels,\n    datasets: [{\n      label: 'Habitaciones Infestadas',\n      data: floorInfestation,\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1\n    }, {\n      label: 'Habitaciones Limpias',\n      data: floorTotals.map((total, index) => total - floorInfestation[index]),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Bar chart options\n  const barOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Infestación por Piso'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            color: \"text.secondary\",\n            children: \"Turno Actual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"div\",\n            sx: {\n              mt: 1\n            },\n            children: data.turn || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            color: \"text.secondary\",\n            children: \"Infestaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"div\",\n            sx: {\n              mt: 1\n            },\n            children: [infestedPercentage.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: infestedPercentage,\n              color: infestedPercentage > 75 ? \"error\" : infestedPercentage > 50 ? \"warning\" : \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            color: \"text.secondary\",\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: data.game_over ? \"Juego Terminado\" : \"En Progreso\",\n              color: data.game_over ? \"error\" : \"success\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), data.game_over && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 1\n            },\n            children: data.game_over_reason === 'practicante_capturado' ? 'Practicante capturado' : 'Todas las habitaciones infestadas'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            color: \"text.secondary\",\n            children: \"Generaci\\xF3n de Zombies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: data.zombie_generation_enabled ? \"Activada\" : \"Desactivada\",\n              color: data.zombie_generation_enabled ? \"warning\" : \"info\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Estado de las Habitaciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 220,\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Pie, {\n              data: pieData,\n              options: {\n                maintainAspectRatio: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Infestaci\\xF3n por Piso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 220\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: barData,\n              options: barOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), data.practicante && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Ubicaci\\xF3n del Practicante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"El practicante se encuentra actualmente en la habitaci\\xF3n \", formatRoomNumber(data.practicante.floor, data.practicante.room)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_c = StatsPanel;\nexport default StatsPanel;\nvar _c;\n$RefreshReg$(_c, \"StatsPanel\");","map":{"version":3,"names":["React","Box","Grid","Typography","LinearProgress","Divider","Chip","Card","CardContent","Chart","ChartJS","ArcElement","Tooltip","ChartTooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Pie","Bar","jsxDEV","_jsxDEV","formatRoomNumber","floorIndex","roomNumber","floorNumber","toString","padStart","register","StatsPanel","data","sx","textAlign","p","children","fileName","_jsxFileName","lineNumber","columnNumber","totalRooms","total_rooms","infestedRooms","infested_rooms","cleanRooms","infestedPercentage","floorLabels","floorInfestation","floorTotals","building","Array","isArray","forEach","floor","index","push","totalRoomsInFloor","length","infestedRoomsInFloor","filter","room","has_zombies","pieData","labels","datasets","backgroundColor","borderColor","borderWidth","barData","label","map","total","barOptions","responsive","scales","x","stacked","y","beginAtZero","plugins","title","display","text","container","spacing","item","xs","md","height","variant","color","component","mt","turn","toFixed","width","value","game_over","game_over_reason","zombie_generation_enabled","gutterBottom","justifyContent","options","maintainAspectRatio","practicante","_c","$RefreshReg$"],"sources":["C:/Users/jiali/OneDrive/Escritorio/Javier_Entrevista/frontend/src/components/StatsPanel.js"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  Box, \r\n  Grid, \r\n  Typography, \r\n  LinearProgress, \r\n  Divider, \r\n  Chip,\r\n  Card,\r\n  CardContent\r\n} from '@mui/material';\r\nimport { \r\n  Chart as ChartJS, \r\n  ArcElement, \r\n  Tooltip as ChartTooltip, \r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title\r\n} from 'chart.js';\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\n// Función para formatear el número de habitación\r\nconst formatRoomNumber = (floorIndex, roomNumber) => {\r\n  // Sumamos 1 al índice del piso para que empiece en 1\r\n  const floorNumber = floorIndex + 1;\r\n  // Para habitaciones normales, usamos el formato piso + número secuencial\r\n  return `${floorNumber}${roomNumber.toString().padStart(2, '0')}`;\r\n};\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  ArcElement, \r\n  ChartTooltip, \r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title\r\n);\r\n\r\nconst StatsPanel = ({ data }) => {\r\n  if (!data) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', p: 2 }}>\r\n        <Typography>No hay estadísticas disponibles</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Extract data for charts\r\n  const totalRooms = data.total_rooms || 0;\r\n  const infestedRooms = data.infested_rooms || 0;\r\n  const cleanRooms = totalRooms - infestedRooms;\r\n  const infestedPercentage = totalRooms > 0 ? (infestedRooms / totalRooms) * 100 : 0;\r\n  \r\n  // Floor-wise infestation data for bar chart\r\n  const floorLabels = [];\r\n  const floorInfestation = [];\r\n  const floorTotals = [];\r\n  \r\n  if (data.building && Array.isArray(data.building)) {\r\n    data.building.forEach((floor, index) => {\r\n      floorLabels.push(`Piso ${index}`);\r\n      \r\n      const totalRoomsInFloor = floor.length;\r\n      const infestedRoomsInFloor = floor.filter(room => room.has_zombies).length;\r\n      \r\n      floorInfestation.push(infestedRoomsInFloor);\r\n      floorTotals.push(totalRoomsInFloor);\r\n    });\r\n  }\r\n  \r\n  // Pie chart data\r\n  const pieData = {\r\n    labels: ['Habitaciones Limpias', 'Habitaciones Infestadas'],\r\n    datasets: [\r\n      {\r\n        data: [cleanRooms, infestedRooms],\r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.6)',\r\n          'rgba(255, 99, 132, 0.6)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(255, 99, 132, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  // Bar chart data\r\n  const barData = {\r\n    labels: floorLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Habitaciones Infestadas',\r\n        data: floorInfestation,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: 'Habitaciones Limpias',\r\n        data: floorTotals.map((total, index) => total - floorInfestation[index]),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n      }\r\n    ],\r\n  };\r\n  \r\n  // Bar chart options\r\n  const barOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n      },\r\n      y: {\r\n        stacked: true,\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Infestación por Piso'\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* Current turn */}\r\n      <Grid item xs={6} md={3}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"overline\" color=\"text.secondary\">\r\n              Turno Actual\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"div\" sx={{ mt: 1 }}>\r\n              {data.turn || 0}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Infestation Percentage */}\r\n      <Grid item xs={6} md={3}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"overline\" color=\"text.secondary\">\r\n              Infestación\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"div\" sx={{ mt: 1 }}>\r\n              {infestedPercentage.toFixed(1)}%\r\n            </Typography>\r\n            <Box sx={{ width: '100%', mt: 1 }}>\r\n              <LinearProgress \r\n                variant=\"determinate\" \r\n                value={infestedPercentage} \r\n                color={infestedPercentage > 75 ? \"error\" : infestedPercentage > 50 ? \"warning\" : \"success\"}\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Game Status */}\r\n      <Grid item xs={6} md={3}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"overline\" color=\"text.secondary\">\r\n              Estado\r\n            </Typography>\r\n            <Box sx={{ mt: 1 }}>\r\n              <Chip \r\n                label={data.game_over ? \"Juego Terminado\" : \"En Progreso\"} \r\n                color={data.game_over ? \"error\" : \"success\"} \r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            {data.game_over && (\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                {data.game_over_reason === 'practicante_capturado' \r\n                  ? 'Practicante capturado' \r\n                  : 'Todas las habitaciones infestadas'}\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Zombie Generation */}\r\n      <Grid item xs={6} md={3}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"overline\" color=\"text.secondary\">\r\n              Generación de Zombies\r\n            </Typography>\r\n            <Box sx={{ mt: 1 }}>\r\n              <Chip \r\n                label={data.zombie_generation_enabled ? \"Activada\" : \"Desactivada\"} \r\n                color={data.zombie_generation_enabled ? \"warning\" : \"info\"} \r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Infested vs Clean Rooms Pie Chart */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Estado de las Habitaciones\r\n            </Typography>\r\n            <Box sx={{ height: 220, display: 'flex', justifyContent: 'center' }}>\r\n              <Pie data={pieData} options={{ maintainAspectRatio: false }} />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Floor-wise infestation Bar Chart */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card sx={{ height: '100%' }}>\r\n          <CardContent>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Infestación por Piso\r\n            </Typography>\r\n            <Box sx={{ height: 220 }}>\r\n              <Bar data={barData} options={barOptions} />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      {/* Practicante Information */}\r\n      {data.practicante && (\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Ubicación del Practicante\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                El practicante se encuentra actualmente en la habitación {formatRoomNumber(data.practicante.floor, data.practicante.room)}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatsPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}